{"assignmentKey":"4gQScFIVtK","name":"Assignment 3 Service Scheduling","moocName":"FIT5216 S1 2025","moocPasswordString":"Submission token","submissionURL":"https://autograder.optimisation-2020.cloud.edu.au/api/index.php","solutionAssignments":[{"id":"lOAbpfLS7S","model":"models/service.mzn","data":"data/service1.dzn","timeout":"60","name":"Service 1"},{"id":"2IdRGQNcqL","model":"models/service.mzn","data":"data/service2.dzn","timeout":"60","name":"Service 2"},{"id":"qp9VMXaErW","model":"models/service.mzn","data":"data/service3.dzn","timeout":"60","name":"Service 3"},{"id":"0BmKNUukHc","model":"models/service.mzn","data":"data/service4.dzn","timeout":"60","name":"Service 4"},{"id":"xlOHQsKaRm","model":"models/service.mzn","data":"data/service5.dzn","timeout":"60","name":"Service 5"},{"id":"nX1TcZPk7I","model":"models/service.mzn","data":"data/service6.dzn","timeout":"60","name":"Service 6"},{"id":"Qg9QtjK6k6","model":"models/service.mzn","data":"data/service7.dzn","timeout":"60","name":"Service 7"},{"id":"IiPWMjxenB","model":"models/service.mzn","data":"data/service8.dzn","timeout":"60","name":"Service 8"},{"id":"9m3ZBoIjtq","model":"models/service.mzn","data":"data/service9.dzn","timeout":"60","name":"Service 9"},{"id":"E5BOJWaAjZ","model":"models/service.mzn","data":"data/service10.dzn","timeout":"60","name":"Service 10"}],"modelAssignments":[{"id":"LXZK9u54uu","model":"models/service.mzn","name":"Service Model 1"}],"sendMeta":true,"history":{"uuid":"180bfbc5-cb5d-f157-ad53-8bee89df9c7a","parent":null,"files":{"models/service.mzn":{"changes":[],"snapshot":"%%%% Service and Maintenance scheduling\r\nint: endtime;                   % latest time to be scheduled\r\nset of int: TIME = 0..endtime;\r\nenum SERVICE;                   % services to be scheduled\r\narray[SERVICE] of TIME: start;  % start time of service\r\narray[SERVICE] of TIME: end;    % end time of service\r\nenum STYPE;\r\narray[SERVICE] of STYPE: stype; % type of each service\r\n\r\nenum TRUCK;                      % truck \r\nTRUCK: dtruck;                   % dummy truck\r\nenum TTYPE = { SML, MED, LRG, DUMMY };  % truck type\r\narray[TRUCK] of TTYPE: ttype;    % type of each truck\r\narray[TRUCK] of int: prework;    % units of work since last major maintenance\r\nconstraint assert(forall(t in TRUCK)(ttype[t] = DUMMY <-> t = dtruck),\"dummy type only for dtruck\\n\");\r\narray[TTYPE] of int: maxsty;     % max service types for each truck type\r\n\r\nenum MAINTYPE = { NO, SH, LG, MJ }; % NO means no maintenance\r\narray[MAINTYPE] of int: maintdur; % duration of maintenance\r\narray[MAINTYPE] of int: maxsep;   % max elapsed time since last maint of this type or higher\r\nconstraint assert(maintdur[NO] = 0 /\\ maxsep[NO] = 0, \"rules for empty maintenance\\n\");\r\n\r\nint: minwork;                   % minimal percentage of time each truck that works is working\r\nint: minservice;                % minimal percentage of services performed\r\n\r\nint: majorwork;                 % amount of work allowed before major maintenance required\r\n\r\n\r\narray[SERVICE] of var TRUCK: truck; % which truck takes each service: dtruck if none\r\n\r\nint: maxmaint;\r\nset of int: MAINT = 1..maxmaint;\r\narray[TRUCK,MAINT] of var MAINTYPE: mt; % maintenance for each truck NO means not used.\r\narray[TRUCK,MAINT] of var TIME: ms;     % maintenance start time for each truck\r\n"}}},"submissionTerms":"By submitting this work you guarantee that no generative AI was used to complete the project, and that the submission is all your own work, without collaboration or collusion with others."}